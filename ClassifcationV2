{"cells":[{"cell_type":"markdown","metadata":{"id":"DMH-HuZRftV4"},"source":["## Classification example for Landsat 8 imagery\n","\n","**Author:** Ren√© Kopeinig<br>\n","**Description:** Classification example for Landsat 8 imagery based on the scientfic work \"MAD-MEX: Automatic Wall-to-Wall Land Cover Monitoring for the Mexican REDD-MRV Program Using All Landsat Data\" by S.Gebhardt et. al 2014. Please find the link to the paper here: https://www.mdpi.com/2072-4292/6/5/3923\n","\n","Notes:\n","- Coordinates Used: [-95.06, 43.85, -95.045, 43.84]\n","  - Got the coordinates to be a zero on the output map."]},{"cell_type":"code","execution_count":30,"metadata":{"id":"DaDzBlkpftV6","executionInfo":{"status":"ok","timestamp":1716232939783,"user_tz":300,"elapsed":697,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"127fd63b-846a-4483-af3e-9cc6c8f1a5da"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["import ee, folium, geemap\n","\n","ee.Authenticate()\n","\n","ee.Initialize(project='fishlake-python')"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"hZcJzyllftV6","executionInfo":{"status":"ok","timestamp":1716232940686,"user_tz":300,"elapsed":3,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"095627bf-ffd7-4d46-aae9-83c53b119407"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["%matplotlib inline"]},{"cell_type":"markdown","metadata":{"id":"CXuLDS_fftV6"},"source":["### Get and visualize the Landsat 8 input data"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"TSaq2tHoftV7","executionInfo":{"status":"ok","timestamp":1716232942144,"user_tz":300,"elapsed":127,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"b227d786-e1d1-4451-8e36-cbc4a7fe29be"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["area_of_interest = ee.Geometry.Rectangle([-95.06, 43.85, -95.045, 43.84])\n","\n","landsat8_collection = ee.ImageCollection('LANDSAT/LC08/C02/T1_TOA').filterDate('2020-01-01', '2020-12-31').min()\n","\n","landsat8_collection = landsat8_collection.slice(0,9)\n","#could just get one image; might be slicing bands\n","\n","fish_lake_landsat = ee.Image(landsat8_collection).clip(area_of_interest)\n","\n","fish_lake_landcover = ee.ImageCollection(\"ESA/WorldCover/v100\").first()\n","#command to read out image instead a route to code; line might not work cus not giving image so pass in the image\n"]},{"cell_type":"code","source":["# A list of pixel values to replace.\n","from_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 100]\n","#wondering if it would be beneficial to make the replace list be only water so that the only thing mapped is water\n","\n","# A corresponding list of replacement values (10 becomes 1, 20 becomes 2, etc).\n","to_list = [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0]\n","# 0 - everything else\n","# 1 - water\n","\n","# Replace pixel values in the image. If the image is multi-band, only the\n","# remapped band will be returned. The returned band name is \"remapped\".\n","# Input image properties are retained in the output image.\n","fish_lake_landcover_2_Class = fish_lake_landcover.remap(from_list, to_list, defaultValue=0, bandName='Map')\n","#sometimes its empty (default is not 0); okay for now; but might change; water = 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"4Vnfwn2zd1sB","executionInfo":{"status":"ok","timestamp":1716233484949,"user_tz":300,"elapsed":153,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"outputId":"dda09a4c-a839-4c5b-ad5d-453fdcf36f0c"},"execution_count":78,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}]},{"cell_type":"code","execution_count":79,"metadata":{"id":"xmw2zuJcftV7","outputId":"327a50af-d0ef-4498-c4a2-2af5dbb76f10","colab":{"base_uri":"https://localhost:8080/","height":850},"executionInfo":{"status":"ok","timestamp":1716233486377,"user_tz":300,"elapsed":440,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<folium.folium.Map at 0x7e6f10a18eb0>"],"text/html":["<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n","&lt;html&gt;\n","&lt;head&gt;\n","    \n","    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n","    \n","        &lt;script&gt;\n","            L_NO_TOUCH = false;\n","            L_DISABLE_3D = false;\n","        &lt;/script&gt;\n","    \n","    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n","    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n","    \n","            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n","                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n","            &lt;style&gt;\n","                #map_d3b31b05565a3004dd25ba0f95d69082 {\n","                    position: relative;\n","                    width: 700.0px;\n","                    height: 500.0px;\n","                    left: 0.0%;\n","                    top: 0.0%;\n","                }\n","                .leaflet-container { font-size: 1rem; }\n","            &lt;/style&gt;\n","        \n","&lt;/head&gt;\n","&lt;body&gt;\n","    \n","    \n","            &lt;div class=&quot;folium-map&quot; id=&quot;map_d3b31b05565a3004dd25ba0f95d69082&quot; &gt;&lt;/div&gt;\n","        \n","&lt;/body&gt;\n","&lt;script&gt;\n","    \n","    \n","            var map_d3b31b05565a3004dd25ba0f95d69082 = L.map(\n","                &quot;map_d3b31b05565a3004dd25ba0f95d69082&quot;,\n","                {\n","                    center: [43.84, -95.06],\n","                    crs: L.CRS.EPSG3857,\n","                    zoom: 15,\n","                    zoomControl: true,\n","                    preferCanvas: false,\n","                }\n","            );\n","\n","            \n","\n","        \n","    \n","            var tile_layer_84c1c8264feb0983b434463c6a4d9069 = L.tileLayer(\n","                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n","                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_d3b31b05565a3004dd25ba0f95d69082);\n","        \n","    \n","            var tile_layer_eea3cbe3481544fab9e92359711ec439 = L.tileLayer(\n","                &quot;https://earthengine.googleapis.com/v1/projects/fishlake-python/maps/e647f152e036d9e52bad16dbec6f07b9-d226fb9608bcbe3bf3c04164b767a7b7/tiles/{z}/{x}/{y}&quot;,\n","                {&quot;attribution&quot;: &quot;Map Data \\u0026copy; \\u003ca href=\\&quot;https://earthengine.google.com/\\&quot;\\u003eGoogle Earth Engine\\u003c/a\\u003e&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_d3b31b05565a3004dd25ba0f95d69082);\n","        \n","    \n","            var layer_control_99b8f3168b5711fda76becaa8a957033 = {\n","                base_layers : {\n","                    &quot;openstreetmap&quot; : tile_layer_84c1c8264feb0983b434463c6a4d9069,\n","                },\n","                overlays :  {\n","                    &quot;Landsat 8 &quot; : tile_layer_eea3cbe3481544fab9e92359711ec439,\n","                },\n","            };\n","            L.control.layers(\n","                layer_control_99b8f3168b5711fda76becaa8a957033.base_layers,\n","                layer_control_99b8f3168b5711fda76becaa8a957033.overlays,\n","                {&quot;autoZIndex&quot;: true, &quot;collapsed&quot;: true, &quot;position&quot;: &quot;topright&quot;}\n","            ).addTo(map_d3b31b05565a3004dd25ba0f95d69082);\n","        \n","&lt;/script&gt;\n","&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"]},"metadata":{},"execution_count":79}],"source":["vis = {\n","    'bands': ['B6', 'B5', 'B2'],\n","    'min': 0,\n","    'max': 0.5,\n","    'gamma': [0.95, 1.1, 1],\n","    'region':area_of_interest}\n","\n","image = landsat8_collection.clip(area_of_interest)\n","\n","mapid = image.getMapId(vis)\n","\n","map = folium.Map(location=[43.84, -95.06],zoom_start=15, height=500,width=700)\n","folium.TileLayer(\n","    tiles=mapid['tile_fetcher'].url_format,\n","    attr='Map Data &copy; <a href=\"https://earthengine.google.com/\">Google Earth Engine</a>',\n","    overlay=True,\n","    name='Landsat 8 ',\n","  ).add_to(map)\n","\n","map.add_child(folium.LayerControl())\n","map\n"]},{"cell_type":"markdown","metadata":{"id":"lcGwYdLiftV7"},"source":["### Functions to derive vegetation indices and other raster operations"]},{"cell_type":"code","execution_count":80,"metadata":{"id":"_EwI2CSfftV7","executionInfo":{"status":"ok","timestamp":1716233488798,"user_tz":300,"elapsed":3,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"bbdd0f59-b703-4089-9676-30856a6f1622"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["def NDVI(image):\n","    return image.normalizedDifference(['B5', 'B4'])\n","\n","def SAM(image):\n","    band1 = image.select(\"B1\")\n","    bandn = image.select(\"B2\",\"B3\",\"B4\",\"B5\",\"B6\",\"B7\",\"B8\",\"B9\");\n","    maxObjSize = 256;\n","    b = band1.divide(bandn);\n","    spectralAngleMap = b.atan();\n","    spectralAngleMap_sin = spectralAngleMap.sin();\n","    spectralAngleMap_cos = spectralAngleMap.cos();\n","    sum_cos = spectralAngleMap_cos.reduce(ee.call(\"Reducer.sum\"));\n","    sum_sin = spectralAngleMap_sin.reduce(ee.call(\"Reducer.sum\"));\n","    return ee.Image.cat(sum_sin, sum_cos, spectralAngleMap_sin, spectralAngleMap_cos);\n","\n","#Enhanced Vegetation Index\n","def EVI(image):\n","    # L(Canopy background)\n","    # C1,C2(Coefficients of aerosol resistance term)\n","    # GainFactor(Gain or scaling factor)\n","    gain_factor = ee.Image(2.5);\n","    coefficient_1 = ee.Image(6);\n","    coefficient_2 = ee.Image(7.5);\n","    l = ee.Image(1);\n","    nir = image.select(\"B5\");\n","    red = image.select(\"B4\");\n","    blue = image.select(\"B2\");\n","    evi = image.expression(\n","        \"Gain_Factor*((NIR-RED)/(NIR+C1*RED-C2*BLUE+L))\",\n","        {\n","            \"Gain_Factor\":gain_factor,\n","            \"NIR\":nir,\n","            \"RED\":red,\n","            \"C1\":coefficient_1,\n","            \"C2\":coefficient_2,\n","            \"BLUE\":blue,\n","            \"L\":l\n","        }\n","    )\n","    return evi\n","\n","#Atmospherically Resistant Vegetation Index\n","def ARVI(image):\n","    red = image.select(\"B4\")\n","    blue = image.select(\"B2\")\n","    nir = image.select(\"B5\")\n","    red_square = red.multiply(red)\n","    arvi = image.expression(\n","        \"NIR - (REDsq - BLUE)/(NIR+(REDsq-BLUE))\",{\n","            \"NIR\": nir,\n","            \"REDsq\": red_square,\n","            \"BLUE\": blue\n","        }\n","    )\n","    return arvi\n","\n","#Leaf Area Index\n","def LAI(image):\n","    nir = image.select(\"B5\")\n","    red = image.select(\"B4\")\n","    coeff1 = ee.Image(0.0305);\n","    coeff2 = ee.Image(1.2640);\n","    lai = image.expression(\n","        \"(((NIR/RED)*COEFF1)+COEFF2)\",\n","        {\n","            \"NIR\":nir,\n","            \"RED\":red,\n","            \"COEFF1\":coeff1,\n","            \"COEFF2\":coeff2\n","        }\n","    )\n","    return lai\n","\n","def tasseled_cap_transformation(image): #come back to this why are some bands are bigger than other; might be based on absorption; known knowledge; want to derive these\n","    #Tasseled Cap Transformation for Landsat 8 based on the\n","    #scientfic work \"Derivation of a tasselled cap transformation based on Landsat 8 at-satellite reflectance\"\n","    #by M.Baigab, L.Zhang, T.Shuai & Q.Tong (2014). The bands of the output image are the brightness index,\n","    #greenness index and wetness index.\n","    b = image.select(\"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\");\n","    #Coefficients are only for Landsat 8 TOA\n","    brightness_coefficents= ee.Image([0.3029, 0.2786, 0.4733, 0.5599, 0.508, 0.1872])\n","    greenness_coefficents= ee.Image([-0.2941, -0.243, -0.5424, 0.7276, 0.0713, -0.1608]);\n","    wetness_coefficents= ee.Image([0.1511, 0.1973, 0.3283, 0.3407, -0.7117, -0.4559]);\n","    fourth_coefficents= ee.Image([-0.8239, 0.0849, 0.4396, -0.058, 0.2013, -0.2773]);\n","    fifth_coefficents= ee.Image([-0.3294, 0.0557, 0.1056, 0.1855, -0.4349, 0.8085]);\n","    sixth_coefficents= ee.Image([0.1079, -0.9023, 0.4119, 0.0575, -0.0259, 0.0252]);\n","\n","    #Calculate tasseled cap transformation\n","    brightness = image.expression(\n","        '(B * BRIGHTNESS)',\n","        {\n","            'B':b,\n","            'BRIGHTNESS': brightness_coefficents\n","        })\n","    greenness = image.expression(\n","        '(B * GREENNESS)',\n","        {\n","            'B':b,\n","            'GREENNESS': greenness_coefficents\n","        })\n","    wetness = image.expression(\n","        '(B * WETNESS)',\n","        {\n","            'B':b,\n","            'WETNESS': wetness_coefficents\n","        })\n","    fourth = image.expression(\n","        '(B * FOURTH)',\n","        {\n","            'B':b,\n","            'FOURTH': fourth_coefficents\n","        })\n","    fifth = image.expression(\n","        '(B * FIFTH)',\n","        {\n","            'B':b,\n","            'FIFTH': fifth_coefficents\n","        })\n","    sixth = image.expression(\n","        '(B * SIXTH)',\n","        {\n","            'B':b,\n","            'SIXTH': sixth_coefficents\n","        })\n","    bright = brightness.reduce(ee.call(\"Reducer.sum\"));\n","    green = greenness.reduce(ee.call(\"Reducer.sum\"));\n","    wet = wetness.reduce(ee.call(\"Reducer.sum\"));\n","    four = fourth.reduce(ee.call(\"Reducer.sum\"));\n","    five = fifth.reduce(ee.call(\"Reducer.sum\"));\n","    six = sixth.reduce(ee.call(\"Reducer.sum\"));\n","    tasseled_cap = ee.Image(bright).addBands(green).addBands(wet).addBands(four).addBands(five).addBands(six)\n","    return tasseled_cap.rename('brightness','greenness','wetness','fourth','fifth','sixth')"]},{"cell_type":"markdown","metadata":{"id":"E9HHPS2gftV8"},"source":["### Derive and visualize Tasseled Cap Transformation"]},{"cell_type":"code","execution_count":81,"metadata":{"id":"Q1BGHS2pftV8","executionInfo":{"status":"ok","timestamp":1716233490802,"user_tz":300,"elapsed":137,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"9e55e37e-36a4-44ec-e2e8-bbcb79a0bd92"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["tct = tasseled_cap_transformation(landsat8_collection)"]},{"cell_type":"code","execution_count":82,"metadata":{"id":"cDwvS1FKftV8","outputId":"d79b5850-c9ee-4623-f0eb-10b38c52c033","colab":{"base_uri":"https://localhost:8080/","height":17},"executionInfo":{"status":"ok","timestamp":1716233491843,"user_tz":300,"elapsed":122,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["def NDVI(image):\n","    return image.normalizedDifference(['B5', 'B4'])\n","\n","def SAM(image):\n","    band1 = image.select(\"B1\")\n","    bandn = image.select(\"B2\",\"B3\",\"B4\",\"B5\",\"B6\",\"B7\",\"B8\",\"B9\");\n","    maxObjSize = 256;\n","    b = band1.divide(bandn);\n","    spectralAngleMap = b.atan();\n","    spectralAngleMap_sin = spectralAngleMap.sin();\n","    spectralAngleMap_cos = spectralAngleMap.cos();\n","    sum_cos = spectralAngleMap_cos.reduce(ee.call(\"Reducer.sum\"));\n","    sum_sin = spectralAngleMap_sin.reduce(ee.call(\"Reducer.sum\"));\n","    return ee.Image.cat(sum_sin, sum_cos, spectralAngleMap_sin, spectralAngleMap_cos);\n","\n","#Enhanced Vegetation Index\n","def EVI(image):\n","    # L(Canopy background)\n","    # C1,C2(Coefficients of aerosol resistance term)\n","    # GainFactor(Gain or scaling factor)\n","    gain_factor = ee.Image(2.5);\n","    coefficient_1 = ee.Image(6);\n","    coefficient_2 = ee.Image(7.5);\n","    l = ee.Image(1);\n","    nir = image.select(\"B5\");\n","    red = image.select(\"B4\");\n","    blue = image.select(\"B2\");\n","    evi = image.expression(\n","        \"Gain_Factor*((NIR-RED)/(NIR+C1*RED-C2*BLUE+L))\",\n","        {\n","            \"Gain_Factor\":gain_factor,\n","            \"NIR\":nir,\n","            \"RED\":red,\n","            \"C1\":coefficient_1,\n","            \"C2\":coefficient_2,\n","            \"BLUE\":blue,\n","            \"L\":l\n","        }\n","    )\n","    return evi\n","\n","#Atmospherically Resistant Vegetation Index\n","def ARVI(image):\n","    red = image.select(\"B4\")\n","    blue = image.select(\"B2\")\n","    nir = image.select(\"B5\")\n","    red_square = red.multiply(red)\n","    arvi = image.expression(\n","        \"NIR - (REDsq - BLUE)/(NIR+(REDsq-BLUE))\",{\n","            \"NIR\": nir,\n","            \"REDsq\": red_square,\n","            \"BLUE\": blue\n","        }\n","    )\n","    return arvi\n","\n","#Leaf Area Index\n","def LAI(image):\n","    nir = image.select(\"B5\")\n","    red = image.select(\"B4\")\n","    coeff1 = ee.Image(0.0305);\n","    coeff2 = ee.Image(1.2640);\n","    lai = image.expression(\n","        \"(((NIR/RED)*COEFF1)+COEFF2)\",\n","        {\n","            \"NIR\":nir,\n","            \"RED\":red,\n","            \"COEFF1\":coeff1,\n","            \"COEFF2\":coeff2\n","        }\n","    )\n","    return lai\n","\n","def tasseled_cap_transformation(image): #come back to this why are some bands are bigger than other; might be based on absorption; known knowledge; want to derive these\n","    #Tasseled Cap Transformation for Landsat 8 based on the\n","    #scientfic work \"Derivation of a tasselled cap transformation based on Landsat 8 at-satellite reflectance\"\n","    #by M.Baigab, L.Zhang, T.Shuai & Q.Tong (2014). The bands of the output image are the brightness index,\n","    #greenness index and wetness index.\n","    b = image.select(\"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\");\n","    #Coefficients are only for Landsat 8 TOA\n","    brightness_coefficents= ee.Image([0.3029, 0.2786, 0.4733, 0.5599, 0.508, 0.1872])\n","    greenness_coefficents= ee.Image([-0.2941, -0.243, -0.5424, 0.7276, 0.0713, -0.1608]);\n","    wetness_coefficents= ee.Image([0.1511, 0.1973, 0.3283, 0.3407, -0.7117, -0.4559]);\n","    fourth_coefficents= ee.Image([-0.8239, 0.0849, 0.4396, -0.058, 0.2013, -0.2773]);\n","    fifth_coefficents= ee.Image([-0.3294, 0.0557, 0.1056, 0.1855, -0.4349, 0.8085]);\n","    sixth_coefficents= ee.Image([0.1079, -0.9023, 0.4119, 0.0575, -0.0259, 0.0252]);\n","\n","    #Calculate tasseled cap transformation\n","    brightness = image.expression(\n","        '(B * BRIGHTNESS)',\n","        {\n","            'B':b,\n","            'BRIGHTNESS': brightness_coefficents\n","        })\n","    greenness = image.expression(\n","        '(B * GREENNESS)',\n","        {\n","            'B':b,\n","            'GREENNESS': greenness_coefficents\n","        })\n","    wetness = image.expression(\n","        '(B * WETNESS)',\n","        {\n","            'B':b,\n","            'WETNESS': wetness_coefficents\n","        })\n","    fourth = image.expression(\n","        '(B * FOURTH)',\n","        {\n","            'B':b,\n","            'FOURTH': fourth_coefficents\n","        })\n","    fifth = image.expression(\n","        '(B * FIFTH)',\n","        {\n","            'B':b,\n","            'FIFTH': fifth_coefficents\n","        })\n","    sixth = image.expression(\n","        '(B * SIXTH)',\n","        {\n","            'B':b,\n","            'SIXTH': sixth_coefficents\n","        })\n","    bright = brightness.reduce(ee.call(\"Reducer.sum\"));\n","    green = greenness.reduce(ee.call(\"Reducer.sum\"));\n","    wet = wetness.reduce(ee.call(\"Reducer.sum\"));\n","    four = fourth.reduce(ee.call(\"Reducer.sum\"));\n","    five = fifth.reduce(ee.call(\"Reducer.sum\"));\n","    six = sixth.reduce(ee.call(\"Reducer.sum\"));\n","    tasseled_cap = ee.Image(bright).addBands(green).addBands(wet).addBands(four).addBands(five).addBands(six)\n","    return tasseled_cap.rename('brightness','greenness','wetness','fourth','fifth','sixth')"]},{"cell_type":"markdown","metadata":{"id":"VSjNiyNPftV8"},"source":["### Derive indices, spectral angles. Build and visualize image stack"]},{"cell_type":"code","execution_count":83,"metadata":{"id":"y7lauXozftV8","executionInfo":{"status":"ok","timestamp":1716233494756,"user_tz":300,"elapsed":163,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"72970ce0-2a07-4101-bc76-af474fccc0c8"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["ndvi = NDVI(landsat8_collection) # function calc the red edge; where is vegetation and where is not\n","sam = SAM(landsat8_collection)\n","evi = EVI(landsat8_collection)\n","arvi = ARVI(landsat8_collection)\n","lai = LAI(landsat8_collection)\n","spectral_indices_stack = ee.Image(ndvi).addBands(lai).addBands(sam).addBands(arvi).addBands(evi).addBands(tct).addBands(landsat8_collection)"]},{"cell_type":"code","execution_count":84,"metadata":{"id":"WyM9l3-1ftV8","outputId":"32feae68-74a9-49b3-bc89-67b0b7a08448","colab":{"base_uri":"https://localhost:8080/","height":850},"executionInfo":{"status":"ok","timestamp":1716233495651,"user_tz":300,"elapsed":369,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<folium.folium.Map at 0x7e6f10a23670>"],"text/html":["<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n","&lt;html&gt;\n","&lt;head&gt;\n","    \n","    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n","    \n","        &lt;script&gt;\n","            L_NO_TOUCH = false;\n","            L_DISABLE_3D = false;\n","        &lt;/script&gt;\n","    \n","    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n","    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n","    \n","            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n","                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n","            &lt;style&gt;\n","                #map_bf79b77d7c7b228e0c4970c490b3d961 {\n","                    position: relative;\n","                    width: 700.0px;\n","                    height: 500.0px;\n","                    left: 0.0%;\n","                    top: 0.0%;\n","                }\n","                .leaflet-container { font-size: 1rem; }\n","            &lt;/style&gt;\n","        \n","&lt;/head&gt;\n","&lt;body&gt;\n","    \n","    \n","            &lt;div class=&quot;folium-map&quot; id=&quot;map_bf79b77d7c7b228e0c4970c490b3d961&quot; &gt;&lt;/div&gt;\n","        \n","&lt;/body&gt;\n","&lt;script&gt;\n","    \n","    \n","            var map_bf79b77d7c7b228e0c4970c490b3d961 = L.map(\n","                &quot;map_bf79b77d7c7b228e0c4970c490b3d961&quot;,\n","                {\n","                    center: [43.84, -95.06],\n","                    crs: L.CRS.EPSG3857,\n","                    zoom: 15,\n","                    zoomControl: true,\n","                    preferCanvas: false,\n","                }\n","            );\n","\n","            \n","\n","        \n","    \n","            var tile_layer_21c9356667e613e204654d841fa29728 = L.tileLayer(\n","                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n","                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_bf79b77d7c7b228e0c4970c490b3d961);\n","        \n","    \n","            var tile_layer_14613baf8f6fe9271f5ebe7be77b9cf4 = L.tileLayer(\n","                &quot;https://earthengine.googleapis.com/v1/projects/fishlake-python/maps/5955c9f992a120f44a6b94dccedfa645-c31190b50db9e501f6e2c9eeb92d413d/tiles/{z}/{x}/{y}&quot;,\n","                {&quot;attribution&quot;: &quot;Map Data \\u0026copy; \\u003ca href=\\&quot;https://earthengine.google.com/\\&quot;\\u003eGoogle Earth Engine\\u003c/a\\u003e&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_bf79b77d7c7b228e0c4970c490b3d961);\n","        \n","    \n","            var layer_control_621861c682b802d8e531f30bdfa72f6d = {\n","                base_layers : {\n","                    &quot;openstreetmap&quot; : tile_layer_21c9356667e613e204654d841fa29728,\n","                },\n","                overlays :  {\n","                    &quot;NDVI&quot; : tile_layer_14613baf8f6fe9271f5ebe7be77b9cf4,\n","                },\n","            };\n","            L.control.layers(\n","                layer_control_621861c682b802d8e531f30bdfa72f6d.base_layers,\n","                layer_control_621861c682b802d8e531f30bdfa72f6d.overlays,\n","                {&quot;autoZIndex&quot;: true, &quot;collapsed&quot;: true, &quot;position&quot;: &quot;topright&quot;}\n","            ).addTo(map_bf79b77d7c7b228e0c4970c490b3d961);\n","        \n","&lt;/script&gt;\n","&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"]},"metadata":{},"execution_count":84}],"source":["image = ndvi.clip(area_of_interest)\n","\n","vis_ndvi = {'min':-1,'max':1,'size':'800',\n","           'region':area_of_interest}\n","\n","mapid = image.getMapId(vis_ndvi)\n","\n","map = folium.Map(location=[43.84, -95.06],zoom_start=15, height=500,width=700)\n","folium.TileLayer(\n","    tiles=mapid['tile_fetcher'].url_format,\n","    attr='Map Data &copy; <a href=\"https://earthengine.google.com/\">Google Earth Engine</a>',\n","    overlay=True,\n","    name='NDVI',\n","  ).add_to(map)\n","\n","map.add_child(folium.LayerControl())\n","map"]},{"cell_type":"markdown","metadata":{"id":"FiLIMVL1ftV8"},"source":["### Define classification function\n"]},{"cell_type":"code","execution_count":85,"metadata":{"id":"2fNSuCS1ftV9","executionInfo":{"status":"ok","timestamp":1716233497382,"user_tz":300,"elapsed":196,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"4951e6cb-4f67-4fec-b08d-8c00e03dfbde"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["def classification(raster_input, training_dataset, number_of_training_points, region, classification_algorithm):\n","    bands = raster_input.bandNames()\n","    points = ee.FeatureCollection.randomPoints(region, number_of_training_points, number_of_training_points, 1)\n","    training = training_dataset.addBands(raster_input).reduceToVectors(\n","        reducer='mean',\n","        geometry=points,\n","        geometryType='centroid',\n","        scale=30,\n","        crs='EPSG:4326'\n","    )\n","    # classifier = ee.Classifier.randomForest().train(\n","    #     features=training,\n","    #     classProperty='label',\n","    #     inputProperties=raster_input.bandNames(),\n","    # )\n","    classifier = ee.Classifier.smileRandomForest(10).train(\n","    features=training,\n","    classProperty='label',\n","    inputProperties=raster_input.bandNames(),\n","    )\n","    out = raster_input.classify(classifier)\n","    return out #returns predicted y; should return water no water; depends on the training dataset\n","\n","\n","#the landcover is y and x is the bands; classification is the linear regression\n","#finds the coefficients from x and y"]},{"cell_type":"markdown","metadata":{"id":"UUL0SdnlftV9"},"source":["### Derive classification function\n","Find a landcover from google earth engine and repeat earlier process but just one image; find the landcover of the year above.\n"]},{"cell_type":"code","execution_count":86,"metadata":{"id":"4MgDyN7SftV9","executionInfo":{"status":"ok","timestamp":1716233498446,"user_tz":300,"elapsed":111,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"32e371d8-5b35-4e3f-d552-f9c3d34f2547"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["output = classification(spectral_indices_stack, fish_lake_landcover_2_Class, 10000, area_of_interest, 'Cart')"]},{"cell_type":"code","source":["fish_lake_landcover_2_Class\n","\n","# 2 class might be declared incorrectly; mapped not clearly or not matched clearly; plotting issue; has to be with ground-truth\n","# or might be a simple plotting issue; try out how to color the map with different values\n","# do more research on other classifications; machine learning models"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":68},"id":"G-L3k3NJEUeR","executionInfo":{"status":"ok","timestamp":1716233499285,"user_tz":300,"elapsed":199,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"outputId":"b2dbd1f7-535f-43a4-ab7e-8a8404672868"},"execution_count":87,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<ee.image.Image at 0x7e6f10a19840>"],"text/html":["<div><style>:root {\n","  --font-color-primary: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n","  --font-color-secondary: var(--jp-content-font-color2, rgba(0, 0, 0, 0.6));\n","  --font-color-accent: rgba(123, 31, 162, 1);\n","  --border-color: var(--jp-border-color2, #e0e0e0);\n","  --background-color: var(--jp-layout-color0, white);\n","  --background-color-row-even: var(--jp-layout-color1, white);\n","  --background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n","}\n","\n","html[theme=\"dark\"],\n","body[data-theme=\"dark\"],\n","body.vscode-dark {\n","  --font-color-primary: rgba(255, 255, 255, 1);\n","  --font-color-secondary: rgba(255, 255, 255, 0.6);\n","  --font-color-accent: rgb(173, 132, 190);\n","  --border-color: #2e2e2e;\n","  --background-color: #111111;\n","  --background-color-row-even: #111111;\n","  --background-color-row-odd: #313131;\n","}\n","\n",".ee {\n","  padding: 1em;\n","  line-height: 1.5em;\n","  min-width: 300px;\n","  max-width: 1200px;\n","  overflow-y: scroll;\n","  max-height: 600px;\n","  border: 1px solid var(--border-color);\n","  font-family: monospace;\n","}\n","\n",".ee li {\n","  list-style-type: none;\n","}\n","\n",".ee ul {\n","  padding-left: 1.5em !important;\n","  margin: 0;\n","}\n","\n",".ee > ul {\n","  padding-left: 0 !important;\n","}\n","\n",".ee-open,\n",".ee-shut {\n","  color: var(--font-color-secondary);\n","  cursor: pointer;\n","  margin: 0;\n","}\n","\n",".ee-open:hover,\n",".ee-shut:hover {\n","  color: var(--font-color-primary);\n","}\n","\n",".ee-k {\n","  color: var(--font-color-accent);\n","  margin-right: 6px;\n","}\n","\n",".ee-v {\n","  color: var(--font-color-primary);\n","}\n","\n",".ee-toggle {\n","  display: none;\n","}\n","\n",".ee-shut + ul {\n","  display: none;\n","}\n","\n",".ee-open + ul {\n","  display: block;\n","}\n","\n",".ee-shut::before {\n","  display: inline-block;\n","  content: \"‚ñº\";\n","  margin-right: 6px;\n","  transform: rotate(-90deg);\n","  transition: transform 0.2s;\n","}\n","\n",".ee-open::before {\n","  transform: rotate(0deg);\n","  display: inline-block;\n","  content: \"‚ñº\";\n","  margin-right: 6px;\n","  transition: transform 0.2s;\n","}\n","</style><div class='ee'><ul><li><label class='ee-shut'>Image ESA/WorldCover/v100/2020 (1 band)<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>type:</span><span class='ee-v'>Image</span></li><li><span class='ee-k'>id:</span><span class='ee-v'>ESA/WorldCover/v100/2020</span></li><li><span class='ee-k'>version:</span><span class='ee-v'>1685065671563344</span></li><li><label class='ee-shut'>bands: List (1 element)<input type='checkbox' class='ee-toggle'></label><ul><li><label class='ee-shut'>0: \"remapped\", int ‚àà [0, 1], EPSG:4326, 4320000x1728000 px<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>id:</span><span class='ee-v'>remapped</span></li><li><span class='ee-k'>crs:</span><span class='ee-v'>EPSG:4326</span></li><li><label class='ee-shut'>crs_transform: List (6 elements)<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>8.333333333333333e-05</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>0</span></li><li><span class='ee-k'>2:</span><span class='ee-v'>-180</span></li><li><span class='ee-k'>3:</span><span class='ee-v'>0</span></li><li><span class='ee-k'>4:</span><span class='ee-v'>-8.333333333333333e-05</span></li><li><span class='ee-k'>5:</span><span class='ee-v'>84</span></li></ul></li><li><label class='ee-shut'>data_type: int ‚àà [0, 1]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>type:</span><span class='ee-v'>PixelType</span></li><li><span class='ee-k'>max:</span><span class='ee-v'>1</span></li><li><span class='ee-k'>min:</span><span class='ee-v'>0</span></li><li><span class='ee-k'>precision:</span><span class='ee-v'>int</span></li></ul></li><li><label class='ee-shut'>dimensions: [4320000, 1728000]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>4320000</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>1728000</span></li></ul></li></ul></li></ul></li><li><label class='ee-shut'>properties: Object (8 properties)<input type='checkbox' class='ee-toggle'></label><ul><li><label class='ee-shut'>Map_class_names: List (11 elements)<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>Tree cover</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>Shrubland</span></li><li><span class='ee-k'>2:</span><span class='ee-v'>Grassland</span></li><li><span class='ee-k'>3:</span><span class='ee-v'>Cropland</span></li><li><span class='ee-k'>4:</span><span class='ee-v'>Built-up</span></li><li><span class='ee-k'>5:</span><span class='ee-v'>Bare / sparse vegetation</span></li><li><span class='ee-k'>6:</span><span class='ee-v'>Snow and ice</span></li><li><span class='ee-k'>7:</span><span class='ee-v'>Permanent water bodies</span></li><li><span class='ee-k'>8:</span><span class='ee-v'>Herbaceous wetland</span></li><li><span class='ee-k'>9:</span><span class='ee-v'>Mangroves</span></li><li><span class='ee-k'>10:</span><span class='ee-v'>Moss and lichen</span></li></ul></li><li><label class='ee-shut'>Map_class_palette: List (11 elements)<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>006400</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>ffbb22</span></li><li><span class='ee-k'>2:</span><span class='ee-v'>ffff4c</span></li><li><span class='ee-k'>3:</span><span class='ee-v'>f096ff</span></li><li><span class='ee-k'>4:</span><span class='ee-v'>fa0000</span></li><li><span class='ee-k'>5:</span><span class='ee-v'>b4b4b4</span></li><li><span class='ee-k'>6:</span><span class='ee-v'>f0f0f0</span></li><li><span class='ee-k'>7:</span><span class='ee-v'>0064c8</span></li><li><span class='ee-k'>8:</span><span class='ee-v'>0096a0</span></li><li><span class='ee-k'>9:</span><span class='ee-v'>00cf75</span></li><li><span class='ee-k'>10:</span><span class='ee-v'>fae6a0</span></li></ul></li><li><label class='ee-shut'>Map_class_values: [10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 100]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>10</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>20</span></li><li><span class='ee-k'>2:</span><span class='ee-v'>30</span></li><li><span class='ee-k'>3:</span><span class='ee-v'>40</span></li><li><span class='ee-k'>4:</span><span class='ee-v'>50</span></li><li><span class='ee-k'>5:</span><span class='ee-v'>60</span></li><li><span class='ee-k'>6:</span><span class='ee-v'>70</span></li><li><span class='ee-k'>7:</span><span class='ee-v'>80</span></li><li><span class='ee-k'>8:</span><span class='ee-v'>90</span></li><li><span class='ee-k'>9:</span><span class='ee-v'>95</span></li><li><span class='ee-k'>10:</span><span class='ee-v'>100</span></li></ul></li><li><span class='ee-k'>system:asset_size:</span><span class='ee-v'>109355097577</span></li><li><label class='ee-shut'>system:footprint: LinearRing (5 vertices)<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>type:</span><span class='ee-v'>LinearRing</span></li><li><label class='ee-shut'>coordinates: List (5 elements)<input type='checkbox' class='ee-toggle'></label><ul><li><label class='ee-shut'>0: [-180, -90]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-180</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>-90</span></li></ul></li><li><label class='ee-shut'>1: [180, -90]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>180</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>-90</span></li></ul></li><li><label class='ee-shut'>2: [180, 90]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>180</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>90</span></li></ul></li><li><label class='ee-shut'>3: [-180, 90]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-180</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>90</span></li></ul></li><li><label class='ee-shut'>4: [-180, -90]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-180</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>-90</span></li></ul></li></ul></li></ul></li><li><span class='ee-k'>system:index:</span><span class='ee-v'>2020</span></li><li><span class='ee-k'>system:time_end:</span><span class='ee-v'>1609459200000</span></li><li><span class='ee-k'>system:time_start:</span><span class='ee-v'>1577836800000</span></li></ul></li></ul></li></ul></div><script>function toggleHeader() {\n","    const parent = this.parentElement;\n","    parent.className = parent.className === \"ee-open\" ? \"ee-shut\" : \"ee-open\";\n","}\n","\n","for (let c of document.getElementsByClassName(\"ee-toggle\")) {\n","    c.onclick = toggleHeader;\n","}</script></div>"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["output"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":131},"id":"gnKS4gBG6Hc_","executionInfo":{"status":"ok","timestamp":1716233501050,"user_tz":300,"elapsed":718,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"outputId":"6e183985-70e2-4b8c-d168-89127aa4d904"},"execution_count":88,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<ee.image.Image at 0x7e6f10a2c730>"],"text/html":["<div><style>:root {\n","  --font-color-primary: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n","  --font-color-secondary: var(--jp-content-font-color2, rgba(0, 0, 0, 0.6));\n","  --font-color-accent: rgba(123, 31, 162, 1);\n","  --border-color: var(--jp-border-color2, #e0e0e0);\n","  --background-color: var(--jp-layout-color0, white);\n","  --background-color-row-even: var(--jp-layout-color1, white);\n","  --background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n","}\n","\n","html[theme=\"dark\"],\n","body[data-theme=\"dark\"],\n","body.vscode-dark {\n","  --font-color-primary: rgba(255, 255, 255, 1);\n","  --font-color-secondary: rgba(255, 255, 255, 0.6);\n","  --font-color-accent: rgb(173, 132, 190);\n","  --border-color: #2e2e2e;\n","  --background-color: #111111;\n","  --background-color-row-even: #111111;\n","  --background-color-row-odd: #313131;\n","}\n","\n",".ee {\n","  padding: 1em;\n","  line-height: 1.5em;\n","  min-width: 300px;\n","  max-width: 1200px;\n","  overflow-y: scroll;\n","  max-height: 600px;\n","  border: 1px solid var(--border-color);\n","  font-family: monospace;\n","}\n","\n",".ee li {\n","  list-style-type: none;\n","}\n","\n",".ee ul {\n","  padding-left: 1.5em !important;\n","  margin: 0;\n","}\n","\n",".ee > ul {\n","  padding-left: 0 !important;\n","}\n","\n",".ee-open,\n",".ee-shut {\n","  color: var(--font-color-secondary);\n","  cursor: pointer;\n","  margin: 0;\n","}\n","\n",".ee-open:hover,\n",".ee-shut:hover {\n","  color: var(--font-color-primary);\n","}\n","\n",".ee-k {\n","  color: var(--font-color-accent);\n","  margin-right: 6px;\n","}\n","\n",".ee-v {\n","  color: var(--font-color-primary);\n","}\n","\n",".ee-toggle {\n","  display: none;\n","}\n","\n",".ee-shut + ul {\n","  display: none;\n","}\n","\n",".ee-open + ul {\n","  display: block;\n","}\n","\n",".ee-shut::before {\n","  display: inline-block;\n","  content: \"‚ñº\";\n","  margin-right: 6px;\n","  transform: rotate(-90deg);\n","  transition: transform 0.2s;\n","}\n","\n",".ee-open::before {\n","  transform: rotate(0deg);\n","  display: inline-block;\n","  content: \"‚ñº\";\n","  margin-right: 6px;\n","  transition: transform 0.2s;\n","}\n","</style><div class='ee'><ul><li><label class='ee-shut'>Image (1 band)<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>type:</span><span class='ee-v'>Image</span></li><li><label class='ee-shut'>bands: List (1 element)<input type='checkbox' class='ee-toggle'></label><ul><li><label class='ee-shut'>0: \"classification\", signed int32, EPSG:4326<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>id:</span><span class='ee-v'>classification</span></li><li><span class='ee-k'>crs:</span><span class='ee-v'>EPSG:4326</span></li><li><label class='ee-shut'>crs_transform: [1, 0, 0, 0, 1, 0]<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>0:</span><span class='ee-v'>1</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>0</span></li><li><span class='ee-k'>2:</span><span class='ee-v'>0</span></li><li><span class='ee-k'>3:</span><span class='ee-v'>0</span></li><li><span class='ee-k'>4:</span><span class='ee-v'>1</span></li><li><span class='ee-k'>5:</span><span class='ee-v'>0</span></li></ul></li><li><label class='ee-shut'>data_type: signed int32<input type='checkbox' class='ee-toggle'></label><ul><li><span class='ee-k'>type:</span><span class='ee-v'>PixelType</span></li><li><span class='ee-k'>max:</span><span class='ee-v'>2147483647</span></li><li><span class='ee-k'>min:</span><span class='ee-v'>-2147483648</span></li><li><span class='ee-k'>precision:</span><span class='ee-v'>int</span></li></ul></li></ul></li></ul></li></ul></li></ul></div><script>function toggleHeader() {\n","    const parent = this.parentElement;\n","    parent.className = parent.className === \"ee-open\" ? \"ee-shut\" : \"ee-open\";\n","}\n","\n","for (let c of document.getElementsByClassName(\"ee-toggle\")) {\n","    c.onclick = toggleHeader;\n","}</script></div>"]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["Value\tColor\tDescription\n","10\t#006400\tTree cover\n","20\t#ffbb22\tShrubland\n","30\t#ffff4c\tGrassland\n","40\t#f096ff\tCropland\n","50\t#fa0000\tBuilt-up\n","60\t#b4b4b4\tBare / sparse vegetation\n","70\t#f0f0f0\tSnow and ice\n","80\t#0064c8\tPermanent water bodies\n","90\t#0096a0\tHerbaceous wetland\n","95\t#00cf75\tMangroves\n","100\t#fae6a0\tMoss and lichen]"],"metadata":{"id":"dXAyYCT0ZsVA"}},{"cell_type":"code","execution_count":95,"metadata":{"id":"D6SsLmLJftV9","executionInfo":{"status":"ok","timestamp":1716235436827,"user_tz":300,"elapsed":142,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"2964eb96-70ed-4822-9bac-6138f27ac9cd"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}}],"source":["# OLD VERSION FOR MULTI-CATEGORIES\n","# palette = ['#006400', '#ffbb22', '#ffff4c', '#f096ff', '#fa0000', '#b4b4b4', '#f0f0f0', '#0064c8', '#0096a0', '#00cf75', '#fae6a0']\n","# palette = ','.join(palette)\n","# vis_classification = {'min': 0, 'max': 10, 'palette': palette, 'region':area_of_interest}\n","\n","# make a visualizing variable\n","# vis_classification = {'min': 11, 'max': 96, 'palette': palette, 'region':area_of_interest}\n"," #fix the variables; add a value variable; read in the value how?\n","\n","# visualization = {\n","#     'bands': ['Map'],\n","# }\n","\n","# m = geemap.Map()\n","# m.center_object(fish_lake_landcover)\n","# m.add_layer(fish_lake_landcover, visualization, 'Landcover')\n","# m\n","\n","\n","# 95 - Herbaceous wetland; might also want to consider as 1\n","#NEW VERSION FOR WATER-NO-WATER\n","#ensure that the numbers match (0 or 1)\n","#how to color each boxes\n","#maybe download that small piece and see if the colors/boxes are correct\n","#print out the mapping to ensure that the colors line up\n","#check the assignment step of this code where 1 might be the only thing being plotted\n","\n","palette = ['#ffff4c', '#0096a0', '#0064c8']\n","palette = ','.join(palette)\n","vis_classification = {'min': 0, 'max': 1, 'palette': palette, 'region':area_of_interest}"]},{"cell_type":"markdown","metadata":{"id":"G-5yr6-wftV9"},"source":["### Display training data of classification"]},{"cell_type":"code","execution_count":96,"metadata":{"id":"8y0NJ-J1ftV9","outputId":"c99e6948-0c99-4a89-d1d0-2a5573a2b61d","colab":{"base_uri":"https://localhost:8080/","height":850},"executionInfo":{"status":"ok","timestamp":1716235438418,"user_tz":300,"elapsed":441,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<folium.folium.Map at 0x7e6f10a1b610>"],"text/html":["<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n","&lt;html&gt;\n","&lt;head&gt;\n","    \n","    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n","    \n","        &lt;script&gt;\n","            L_NO_TOUCH = false;\n","            L_DISABLE_3D = false;\n","        &lt;/script&gt;\n","    \n","    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n","    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n","    \n","            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n","                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n","            &lt;style&gt;\n","                #map_201dbd5bb2215011e743c811de86f2d6 {\n","                    position: relative;\n","                    width: 700.0px;\n","                    height: 500.0px;\n","                    left: 0.0%;\n","                    top: 0.0%;\n","                }\n","                .leaflet-container { font-size: 1rem; }\n","            &lt;/style&gt;\n","        \n","&lt;/head&gt;\n","&lt;body&gt;\n","    \n","    \n","            &lt;div class=&quot;folium-map&quot; id=&quot;map_201dbd5bb2215011e743c811de86f2d6&quot; &gt;&lt;/div&gt;\n","        \n","&lt;/body&gt;\n","&lt;script&gt;\n","    \n","    \n","            var map_201dbd5bb2215011e743c811de86f2d6 = L.map(\n","                &quot;map_201dbd5bb2215011e743c811de86f2d6&quot;,\n","                {\n","                    center: [43.84, -95.06],\n","                    crs: L.CRS.EPSG3857,\n","                    zoom: 15,\n","                    zoomControl: true,\n","                    preferCanvas: false,\n","                }\n","            );\n","\n","            \n","\n","        \n","    \n","            var tile_layer_3eb9d4697c273aedf62c60682ac89ae9 = L.tileLayer(\n","                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n","                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_201dbd5bb2215011e743c811de86f2d6);\n","        \n","    \n","            var tile_layer_dc5f1f270bcd3b1adf262d98e5241665 = L.tileLayer(\n","                &quot;https://earthengine.googleapis.com/v1/projects/fishlake-python/maps/5291abd19982b9144b4dd27200af5b27-28d560fd84550ee81199184f8a26e868/tiles/{z}/{x}/{y}&quot;,\n","                {&quot;attribution&quot;: &quot;Map Data \\u0026copy; \\u003ca href=\\&quot;https://earthengine.google.com/\\&quot;\\u003eGoogle Earth Engine\\u003c/a\\u003e&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_201dbd5bb2215011e743c811de86f2d6);\n","        \n","    \n","            var layer_control_80c26fad5dcc39258a6a62536fa81596 = {\n","                base_layers : {\n","                    &quot;openstreetmap&quot; : tile_layer_3eb9d4697c273aedf62c60682ac89ae9,\n","                },\n","                overlays :  {\n","                    &quot;Training Data&quot; : tile_layer_dc5f1f270bcd3b1adf262d98e5241665,\n","                },\n","            };\n","            L.control.layers(\n","                layer_control_80c26fad5dcc39258a6a62536fa81596.base_layers,\n","                layer_control_80c26fad5dcc39258a6a62536fa81596.overlays,\n","                {&quot;autoZIndex&quot;: true, &quot;collapsed&quot;: true, &quot;position&quot;: &quot;topright&quot;}\n","            ).addTo(map_201dbd5bb2215011e743c811de86f2d6);\n","        \n","&lt;/script&gt;\n","&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"]},"metadata":{},"execution_count":96}],"source":["image = fish_lake_landcover_2_Class.clip(area_of_interest)\n","\n","mapid = image.getMapId(vis_classification)\n","\n","map = folium.Map(location=[43.84, -95.06],zoom_start=15, height=500,width=700)\n","folium.TileLayer(\n","    tiles=mapid['tile_fetcher'].url_format,\n","    attr='Map Data &copy; <a href=\"https://earthengine.google.com/\">Google Earth Engine</a>',\n","    overlay=True,\n","    name='Training Data',\n","  ).add_to(map)\n","\n","map.add_child(folium.LayerControl())\n","map"]},{"cell_type":"markdown","metadata":{"id":"vk8zr9qXftV9"},"source":["### Display classification output\n","\n","Please be patient. It may take a few moments. You might have to run this cell several times."]},{"cell_type":"code","execution_count":97,"metadata":{"id":"COZSSUYQftV9","outputId":"6c70cc78-b9d8-4b52-c243-f2e808511c66","colab":{"base_uri":"https://localhost:8080/","height":850},"executionInfo":{"status":"ok","timestamp":1716235444598,"user_tz":300,"elapsed":523,"user":{"displayName":"Baanee Singh","userId":"05536524965728326195"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","            <style>\n","                .geemap-dark {\n","                    --jp-widgets-color: white;\n","                    --jp-widgets-label-color: white;\n","                    --jp-ui-font-color1: white;\n","                    --jp-layout-color2: #454545;\n","                    background-color: #383838;\n","                }\n","\n","                .geemap-dark .jupyter-button {\n","                    --jp-layout-color3: #383838;\n","                }\n","\n","                .geemap-colab {\n","                    background-color: var(--colab-primary-surface-color, white);\n","                }\n","\n","                .geemap-colab .jupyter-button {\n","                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n","                }\n","            </style>\n","            "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<folium.folium.Map at 0x7e6f10a1a470>"],"text/html":["<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n","&lt;html&gt;\n","&lt;head&gt;\n","    \n","    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n","    \n","        &lt;script&gt;\n","            L_NO_TOUCH = false;\n","            L_DISABLE_3D = false;\n","        &lt;/script&gt;\n","    \n","    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n","    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n","    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n","    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n","    \n","            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n","                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n","            &lt;style&gt;\n","                #map_fa2a66be681784d723fecd3435b353fe {\n","                    position: relative;\n","                    width: 700.0px;\n","                    height: 500.0px;\n","                    left: 0.0%;\n","                    top: 0.0%;\n","                }\n","                .leaflet-container { font-size: 1rem; }\n","            &lt;/style&gt;\n","        \n","&lt;/head&gt;\n","&lt;body&gt;\n","    \n","    \n","            &lt;div class=&quot;folium-map&quot; id=&quot;map_fa2a66be681784d723fecd3435b353fe&quot; &gt;&lt;/div&gt;\n","        \n","&lt;/body&gt;\n","&lt;script&gt;\n","    \n","    \n","            var map_fa2a66be681784d723fecd3435b353fe = L.map(\n","                &quot;map_fa2a66be681784d723fecd3435b353fe&quot;,\n","                {\n","                    center: [43.84, -95.06],\n","                    crs: L.CRS.EPSG3857,\n","                    zoom: 15,\n","                    zoomControl: true,\n","                    preferCanvas: false,\n","                }\n","            );\n","\n","            \n","\n","        \n","    \n","            var tile_layer_dca48808198a58596b983b6227e4ba7e = L.tileLayer(\n","                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n","                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_fa2a66be681784d723fecd3435b353fe);\n","        \n","    \n","            var tile_layer_69703d0edea60953424d1d9b6d1ef689 = L.tileLayer(\n","                &quot;https://earthengine.googleapis.com/v1/projects/fishlake-python/maps/0d04088674847739b0a79eca72994370-4c6d38f7e0a65b9fb0d5c4053d96deda/tiles/{z}/{x}/{y}&quot;,\n","                {&quot;attribution&quot;: &quot;Map Data \\u0026copy; \\u003ca href=\\&quot;https://earthengine.google.com/\\&quot;\\u003eGoogle Earth Engine\\u003c/a\\u003e&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n","            ).addTo(map_fa2a66be681784d723fecd3435b353fe);\n","        \n","    \n","            var layer_control_92c49ce3e3b6a61f65e92c0266fc47e1 = {\n","                base_layers : {\n","                    &quot;openstreetmap&quot; : tile_layer_dca48808198a58596b983b6227e4ba7e,\n","                },\n","                overlays :  {\n","                    &quot;Classification Output&quot; : tile_layer_69703d0edea60953424d1d9b6d1ef689,\n","                },\n","            };\n","            L.control.layers(\n","                layer_control_92c49ce3e3b6a61f65e92c0266fc47e1.base_layers,\n","                layer_control_92c49ce3e3b6a61f65e92c0266fc47e1.overlays,\n","                {&quot;autoZIndex&quot;: true, &quot;collapsed&quot;: true, &quot;position&quot;: &quot;topright&quot;}\n","            ).addTo(map_fa2a66be681784d723fecd3435b353fe);\n","        \n","&lt;/script&gt;\n","&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"]},"metadata":{},"execution_count":97}],"source":["\n","image = output.clip(area_of_interest)\n","\n","mapid = image.getMapId(vis_classification)\n","\n","map = folium.Map(location=[43.84, -95.06], zoom_start=15, height=500,width=700)\n","folium.TileLayer(\n","    tiles=mapid['tile_fetcher'].url_format,\n","    attr='Map Data &copy; <a href=\"https://earthengine.google.com/\">Google Earth Engine</a>',\n","    overlay=True,\n","    name='Classification Output',\n","  ).add_to(map)\n","\n","map.add_child(folium.LayerControl())\n","map\n","\n"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"},"colab":{"provenance":[{"file_id":"1kjafphNi2Us_XPlAy_8GNUwRhynPPLCY","timestamp":1712872145270}]}},"nbformat":4,"nbformat_minor":0}